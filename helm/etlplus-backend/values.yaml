# Default values for etlplus-backend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

image:
  # In production, set repository to your container registry (e.g., your-registry.com/your-org/etlplus-backend)
  repository: your-registry.com/your-org/etlplus-backend
  pullPolicy: IfNotPresent
  # In production, use immutable versioned tags (e.g., v1.2.3) instead of 'latest'
  # Set tag to a specific version for production deployments
  tag: "v1.0.0"
  # Use imagePullSecrets for private registries

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

ingress:
  enabled: true
  className: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: etlplus-ENVIRONMENT.yourdomain.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: etlplus-tls
      hosts:
        - etlplus-ENVIRONMENT.yourdomain.com

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

environment: staging

config:
  server:
    address: "0.0.0.0"
    port: 8080
    threads: 4
  database:
    # These values should be set via Kubernetes Secrets or environment variables
    # The actual values will be injected at runtime from the secrets template
    host: ""  # Will be populated from secrets
    port: 1521
    name: "FREE"
    service_name: "FREE"
    username: "etlplus"
    password: ""  # Will be populated from secrets
    type: "oracle"
  auth:
    jwt_secret: "${JWT_SECRET}"
    session_timeout: 3600
  etl:
    max_concurrent_jobs: 5
    job_timeout: 1800

# IMPORTANT: The secrets section below contains placeholder values.
# These MUST be overridden in production with real secrets.
# Use one of these approaches:
# 1. Override via --set flags: --set secrets.databasePassword=YOUR_PASSWORD
# 2. Use a separate values file with real secrets (not committed to VCS)
# 3. Use external secret management (e.g., Sealed Secrets, Vault)
secrets:
  databaseHost: "CHANGE_ME_ORACLE_DB_SERVICE"
  databasePassword: "CHANGE_ME_DATABASE_PASSWORD"
  jwtSecret: "CHANGE_ME_JWT_SECRET"

nodeSelector: {}

tolerations: []

affinity: {}
